{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue","webpack:///./src/App.vue?bfc2","webpack:///./src/main.js","webpack:///./src/App.vue?3fe2"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","id","puzzle","row","rowIndex","cell","colIndex","number","handleInput","type","class","given","valid","disabled","ref","el","inputs","sudoku","console","log","VUE_APP_WS_URL","wsUrl","socket","WebSocket","DIGITS","ROWS","COLS","SQUARES","UNITS","SQUARE_UNITS_MAP","SQUARE_PEERS_MAP","MIN_GIVENS","NR_SQUARES","DIFFICULTY","easy","medium","hard","insane","inhuman","initialize","_cross","_get_all_units","_get_square_units_map","_get_square_peers_map","BLANK_CHAR","BLANK_BOARD","generate","difficulty","unique","_force_range","blank_board","candidates","_get_candidates_map","shuffled_squares","_shuffle","si","square","rand_candidate_idx","_rand_range","rand_candidate","_assign","single_candidates","_strip_dups","board","givens_idxs","nr_givens","target","parseInt","substr","solve","reverse","report","validate_board","_in","_search","solution","get_candidates","candidates_map","rows","cur_row","candidate_map","squares_values_map","_get_square_vals_map","val","new_candidates","max_nr_candidates","nr_candidates","min_nr_candidates","min_candidates_square","min_candidates","vi","candidates_copy","JSON","parse","stringify","candidates_next","other_vals","replace","ovi","other_val","_eliminate","target_val","pi","peer","candidates_new","ui","unit","val_places","unit_square","squares_vals_map","squares","units","square_unit_map","cur_square","cur_square_units","cur_unit","indexOf","units_map","square_peers_map","cur_square_peers","sui","cur_unit_square","cols","ri","ci","row_squares","col_squares","rsi","csi","board_string_to_grid","board_string","board_grid_to_string","board_grid","print_board","V_PADDING","H_PADDING","V_BOX_PADDING","H_BOX_PADDING","display_string","a","b","ai","bi","v","seq","_first_true","shuffled","ti","max","min","Math","floor","random","seq_set","dup_map","e","nr","setup","close","onopen","onmessage","recursiveMove","col","rowDir","colDir","dir","count","focus","$event","acceptedKeys","arrowKeys","includes","preventDefault","send","render","createApp","App","mount"],"mappings":"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","file":"js/app.f408c95c.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","<template>\n  <div id=\"app\">\n    <table>\n      <tbody>\n        <tr v-for=\"(row, rowIndex) in puzzle\" :key=\"rowIndex\">\n          <td\n            v-for=\"(cell, colIndex) in row\"\n            :key=\"`${colIndex}+${rowIndex}-td`\"\n            :id=\"`${colIndex}+${rowIndex}-td-id`\"\n          >\n            <input\n              :value=\"cell.number\"\n              @keydown.exact=\"handleInput({\n                cell, \n                row: rowIndex, \n                col: colIndex, \n                key: $event.key, \n                $event,\n              })\"\n              type=\"text\"\n              :name=\"`${colIndex}+${rowIndex}`\"\n              :id=\"`${colIndex}+${rowIndex}`\"\n              :class=\"[{'border-right': ((colIndex+1) % 3) == 0, 'border-bottom': ((rowIndex+1) % 3) == 0, 'border-left': colIndex == 0, 'border-top': rowIndex == 0, bold: cell.given, invalid: !cell.valid.value }, 'sudoku-board-cell']\"\n              :disabled=\"cell.given\"\n              :ref=\"el => { inputs[rowIndex][colIndex] = el }\"\n            />\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nvar sudoku = {};\n\nconsole.log(process.env.VUE_APP_WS_URL);\n\nconst wsUrl = process.env.VUE_APP_WS_URL ?? \"ws://tealog.xyz:8010\";\nconsole.log(wsUrl);\n\nconst socket = new WebSocket(wsUrl);\n/* eslint-disable */\nconsole.log(sudoku);\n(function() {\n  sudoku.DIGITS = \"123456789\"; // Allowed sudoku.DIGITS\n  var ROWS = \"ABCDEFGHI\"; // Row lables\n  var COLS = sudoku.DIGITS; // Column lables\n  var SQUARES = null; // Square IDs\n\n  var UNITS = null; // All units (row, column, or box)\n  var SQUARE_UNITS_MAP = null; // Squares -> units map\n  var SQUARE_PEERS_MAP = null; // Squares -> peers map\n\n  var MIN_GIVENS = 17; // Minimum number of givens\n  var NR_SQUARES = 81; // Number of squares\n\n  // Define difficulties by how many squares are given to the player in a new\n  // puzzle.\n  var DIFFICULTY = {\n    easy: 62,\n    medium: 53,\n    hard: 44,\n    \"very-hard\": 35,\n    insane: 26,\n    inhuman: 17\n  };\n\n  // Blank character and board representation\n  sudoku.BLANK_CHAR = \".\";\n  sudoku.BLANK_BOARD =\n    \"....................................................\" +\n    \".............................\";\n\n  // Init\n  // -------------------------------------------------------------------------\n  function initialize() {\n    /* Initialize the Sudoku library (invoked after library load)\n     */\n    SQUARES = sudoku._cross(ROWS, COLS);\n    UNITS = sudoku._get_all_units(ROWS, COLS);\n    SQUARE_UNITS_MAP = sudoku._get_square_units_map(SQUARES, UNITS);\n    SQUARE_PEERS_MAP = sudoku._get_square_peers_map(SQUARES, SQUARE_UNITS_MAP);\n  }\n\n  // Generate\n  // -------------------------------------------------------------------------\n  sudoku.generate = function(difficulty, unique) {\n    /* Generate a new Sudoku puzzle of a particular `difficulty`, e.g.,\n        \n            // Generate an \"easy\" sudoku puzzle\n            sudoku.generate(\"easy\");\n            \n        \n        Difficulties are as follows, and represent the number of given squares:\n        \n                \"easy\":         61\n                \"medium\":       52\n                \"hard\":         43\n                \"very-hard\":    34\n                \"insane\":       25\n                \"inhuman\":      17\n            \n            \n        You may also enter a custom number of squares to be given, e.g.,\n        \n            // Generate a new Sudoku puzzle with 60 given squares\n            sudoku.generate(60)\n    \n    \n        `difficulty` must be a number between 17 and 81 inclusive. If it's\n        outside of that range, `difficulty` will be set to the closest bound,\n        e.g., 0 -> 17, and 100 -> 81.\n        \n        \n        By default, the puzzles are unique, uless you set `unique` to false. \n        (Note: Puzzle uniqueness is not yet implemented, so puzzles are *not* \n        guaranteed to have unique solutions)\n        \n        TODO: Implement puzzle uniqueness\n        */\n\n    // If `difficulty` is a string or undefined, convert it to a number or\n    // default it to \"easy\" if undefined.\n    if (typeof difficulty === \"string\" || typeof difficulty === \"undefined\") {\n      difficulty = DIFFICULTY[difficulty] || DIFFICULTY.easy;\n    }\n\n    // Force difficulty between 17 and 81 inclusive\n    difficulty = sudoku._force_range(difficulty, NR_SQUARES + 1, MIN_GIVENS);\n\n    // Default unique to true\n    unique = unique || true;\n\n    // Get a set of squares and all possible candidates for each square\n    var blank_board = \"\";\n    for (var i = 0; i < NR_SQUARES; ++i) {\n      blank_board += \".\";\n    }\n    var candidates = sudoku._get_candidates_map(blank_board);\n\n    // For each item in a shuffled list of squares\n    var shuffled_squares = sudoku._shuffle(SQUARES);\n    for (var si in shuffled_squares) {\n      var square = shuffled_squares[si];\n\n      // If an assignment of a random chioce causes a contradictoin, give\n      // up and try again\n      var rand_candidate_idx = sudoku._rand_range(candidates[square].length);\n      var rand_candidate = candidates[square][rand_candidate_idx];\n      if (!sudoku._assign(candidates, square, rand_candidate)) {\n        break;\n      }\n\n      // Make a list of all single candidates\n      var single_candidates = [];\n      for (var si in SQUARES) {\n        var square = SQUARES[si];\n\n        if (candidates[square].length == 1) {\n          single_candidates.push(candidates[square]);\n        }\n      }\n\n      // If we have at least difficulty, and the unique candidate count is\n      // at least 8, return the puzzle!\n      if (\n        single_candidates.length >= difficulty &&\n        sudoku._strip_dups(single_candidates).length >= 8\n      ) {\n        var board = \"\";\n        var givens_idxs = [];\n        for (var i in SQUARES) {\n          var square = SQUARES[i];\n          if (candidates[square].length == 1) {\n            board += candidates[square];\n            givens_idxs.push(i);\n          } else {\n            board += sudoku.BLANK_CHAR;\n          }\n        }\n\n        // If we have more than `difficulty` givens, remove some random\n        // givens until we're down to exactly `difficulty`\n        var nr_givens = givens_idxs.length;\n        if (nr_givens > difficulty) {\n          givens_idxs = sudoku._shuffle(givens_idxs);\n          for (var i = 0; i < nr_givens - difficulty; ++i) {\n            var target = parseInt(givens_idxs[i]);\n            board =\n              board.substr(0, target) +\n              sudoku.BLANK_CHAR +\n              board.substr(target + 1);\n          }\n        }\n\n        // Double check board is solvable\n        // TODO: Make a standalone board checker. Solve is expensive.\n        if (sudoku.solve(board)) {\n          return board;\n        }\n      }\n    }\n\n    // Give up and try a new puzzle\n    return sudoku.generate(difficulty);\n  };\n\n  // Solve\n  // -------------------------------------------------------------------------\n  sudoku.solve = function(board, reverse) {\n    /* Solve a sudoku puzzle given a sudoku `board`, i.e., an 81-character \n        string of sudoku.DIGITS, 1-9, and spaces identified by '.', representing the\n        squares. There must be a minimum of 17 givens. If the given board has no\n        solutions, return false.\n        \n        Optionally set `reverse` to solve \"backwards\", i.e., rotate through the\n        possibilities in reverse. Useful for checking if there is more than one\n        solution.\n        */\n\n    // Assure a valid board\n    var report = sudoku.validate_board(board);\n    if (report !== true) {\n      throw report;\n    }\n\n    // Check number of givens is at least MIN_GIVENS\n    var nr_givens = 0;\n    for (var i in board) {\n      if (\n        board[i] !== sudoku.BLANK_CHAR &&\n        sudoku._in(board[i], sudoku.DIGITS)\n      ) {\n        ++nr_givens;\n      }\n    }\n    if (nr_givens < MIN_GIVENS) {\n      throw \"Too few givens. Minimum givens is \" + MIN_GIVENS;\n    }\n\n    // Default reverse to false\n    reverse = reverse || false;\n\n    var candidates = sudoku._get_candidates_map(board);\n    var result = sudoku._search(candidates, reverse);\n\n    if (result) {\n      var solution = \"\";\n      for (var square in result) {\n        solution += result[square];\n      }\n      return solution;\n    }\n    return false;\n  };\n\n  sudoku.get_candidates = function(board) {\n    /* Return all possible candidatees for each square as a grid of \n        candidates, returnning `false` if a contradiction is encountered.\n        \n        Really just a wrapper for sudoku._get_candidates_map for programmer\n        consumption.\n        */\n\n    // Assure a valid board\n    var report = sudoku.validate_board(board);\n    if (report !== true) {\n      throw report;\n    }\n\n    // Get a candidates map\n    var candidates_map = sudoku._get_candidates_map(board);\n\n    // If there's an error, return false\n    if (!candidates_map) {\n      return false;\n    }\n\n    // Transform candidates map into grid\n    var rows = [];\n    var cur_row = [];\n    var i = 0;\n    for (var square in candidates_map) {\n      var candidates = candidates_map[square];\n      cur_row.push(candidates);\n      if (i % 9 == 8) {\n        rows.push(cur_row);\n        cur_row = [];\n      }\n      ++i;\n    }\n    return rows;\n  };\n\n  sudoku._get_candidates_map = function(board) {\n    /* Get all possible candidates for each square as a map in the form\n        {square: sudoku.DIGITS} using recursive constraint propagation. Return `false` \n        if a contradiction is encountered\n        */\n\n    // Assure a valid board\n    var report = sudoku.validate_board(board);\n    if (report !== true) {\n      throw report;\n    }\n\n    var candidate_map = {};\n    var squares_values_map = sudoku._get_square_vals_map(board);\n\n    // Start by assigning every digit as a candidate to every square\n    for (var si in SQUARES) {\n      candidate_map[SQUARES[si]] = sudoku.DIGITS;\n    }\n\n    // For each non-blank square, assign its value in the candidate map and\n    // propigate.\n    for (var square in squares_values_map) {\n      var val = squares_values_map[square];\n\n      if (sudoku._in(val, sudoku.DIGITS)) {\n        var new_candidates = sudoku._assign(candidate_map, square, val);\n\n        // Fail if we can't assign val to square\n        if (!new_candidates) {\n          return false;\n        }\n      }\n    }\n\n    return candidate_map;\n  };\n\n  sudoku._search = function(candidates, reverse) {\n    /* Given a map of squares -> candiates, using depth-first search, \n        recursively try all possible values until a solution is found, or false\n        if no solution exists. \n        */\n\n    // Return if error in previous iteration\n    if (!candidates) {\n      return false;\n    }\n\n    // Default reverse to false\n    reverse = reverse || false;\n\n    // If only one candidate for every square, we've a solved puzzle!\n    // Return the candidates map.\n    var max_nr_candidates = 0;\n    var max_candidates_square = null;\n    for (var si in SQUARES) {\n      var square = SQUARES[si];\n\n      var nr_candidates = candidates[square].length;\n\n      if (nr_candidates > max_nr_candidates) {\n        max_nr_candidates = nr_candidates;\n        max_candidates_square = square;\n      }\n    }\n    if (max_nr_candidates === 1) {\n      return candidates;\n    }\n\n    // Choose the blank square with the fewest possibilities > 1\n    var min_nr_candidates = 10;\n    var min_candidates_square = null;\n    for (si in SQUARES) {\n      var square = SQUARES[si];\n\n      var nr_candidates = candidates[square].length;\n\n      if (nr_candidates < min_nr_candidates && nr_candidates > 1) {\n        min_nr_candidates = nr_candidates;\n        min_candidates_square = square;\n      }\n    }\n\n    // Recursively search through each of the candidates of the square\n    // starting with the one with fewest candidates.\n\n    // Rotate through the candidates forwards\n    var min_candidates = candidates[min_candidates_square];\n    if (!reverse) {\n      for (var vi in min_candidates) {\n        var val = min_candidates[vi];\n\n        // TODO: Implement a non-rediculous deep copy function\n        var candidates_copy = JSON.parse(JSON.stringify(candidates));\n        var candidates_next = sudoku._search(\n          sudoku._assign(candidates_copy, min_candidates_square, val)\n        );\n\n        if (candidates_next) {\n          return candidates_next;\n        }\n      }\n\n      // Rotate through the candidates backwards\n    } else {\n      for (var vi = min_candidates.length - 1; vi >= 0; --vi) {\n        var val = min_candidates[vi];\n\n        // TODO: Implement a non-rediculous deep copy function\n        var candidates_copy = JSON.parse(JSON.stringify(candidates));\n        var candidates_next = sudoku._search(\n          sudoku._assign(candidates_copy, min_candidates_square, val),\n          reverse\n        );\n\n        if (candidates_next) {\n          return candidates_next;\n        }\n      }\n    }\n\n    // If we get through all combinations of the square with the fewest\n    // candidates without finding an answer, there isn't one. Return false.\n    return false;\n  };\n\n  sudoku._assign = function(candidates, square, val) {\n    /* Eliminate all values, *except* for `val`, from `candidates` at \n        `square` (candidates[square]), and propagate. Return the candidates map\n        when finished. If a contradiciton is found, return false.\n        \n        WARNING: This will modify the contents of `candidates` directly.\n        */\n\n    // Grab a list of canidates without 'val'\n    var other_vals = candidates[square].replace(val, \"\");\n\n    // Loop through all other values and eliminate them from the candidates\n    // at the current square, and propigate. If at any point we get a\n    // contradiction, return false.\n    for (var ovi in other_vals) {\n      var other_val = other_vals[ovi];\n\n      var candidates_next = sudoku._eliminate(candidates, square, other_val);\n\n      if (!candidates_next) {\n        //console.log(\"Contradiction found by _eliminate.\");\n        return false;\n      }\n    }\n\n    return candidates;\n  };\n\n  sudoku._eliminate = function(candidates, square, val) {\n    /* Eliminate `val` from `candidates` at `square`, (candidates[square]),\n        and propagate when values or places <= 2. Return updated candidates,\n        unless a contradiction is detected, in which case, return false.\n        \n        WARNING: This will modify the contents of `candidates` directly.\n        */\n\n    // If `val` has already been eliminated from candidates[square], return\n    // with candidates.\n    if (!sudoku._in(val, candidates[square])) {\n      return candidates;\n    }\n\n    // Remove `val` from candidates[square]\n    candidates[square] = candidates[square].replace(val, \"\");\n\n    // If the square has only candidate left, eliminate that value from its\n    // peers\n    var nr_candidates = candidates[square].length;\n    if (nr_candidates === 1) {\n      var target_val = candidates[square];\n\n      for (var pi in SQUARE_PEERS_MAP[square]) {\n        var peer = SQUARE_PEERS_MAP[square][pi];\n\n        var candidates_new = sudoku._eliminate(candidates, peer, target_val);\n\n        if (!candidates_new) {\n          return false;\n        }\n      }\n\n      // Otherwise, if the square has no candidates, we have a contradiction.\n      // Return false.\n    }\n    if (nr_candidates === 0) {\n      return false;\n    }\n\n    // If a unit is reduced to only one place for a value, then assign it\n    for (var ui in SQUARE_UNITS_MAP[square]) {\n      var unit = SQUARE_UNITS_MAP[square][ui];\n\n      var val_places = [];\n      for (var si in unit) {\n        var unit_square = unit[si];\n        if (sudoku._in(val, candidates[unit_square])) {\n          val_places.push(unit_square);\n        }\n      }\n\n      // If there's no place for this value, we have a contradition!\n      // return false\n      if (val_places.length === 0) {\n        return false;\n\n        // Otherwise the value can only be in one place. Assign it there.\n      } else if (val_places.length === 1) {\n        var candidates_new = sudoku._assign(candidates, val_places[0], val);\n\n        if (!candidates_new) {\n          return false;\n        }\n      }\n    }\n\n    return candidates;\n  };\n\n  // Square relationships\n  // -------------------------------------------------------------------------\n  // Squares, and their relationships with values, units, and peers.\n\n  sudoku._get_square_vals_map = function(board) {\n    /* Return a map of squares -> values\n     */\n    var squares_vals_map = {};\n\n    // Make sure `board` is a string of length 81\n    if (board.length != SQUARES.length) {\n      throw \"Board/squares length mismatch.\";\n    } else {\n      for (var i in SQUARES) {\n        squares_vals_map[SQUARES[i]] = board[i];\n      }\n    }\n\n    return squares_vals_map;\n  };\n\n  sudoku._get_square_units_map = function(squares, units) {\n    /* Return a map of `squares` and their associated units (row, col, box)\n     */\n    var square_unit_map = {};\n\n    // For every square...\n    for (var si in squares) {\n      var cur_square = squares[si];\n\n      // Maintain a list of the current square's units\n      var cur_square_units = [];\n\n      // Look through the units, and see if the current square is in it,\n      // and if so, add it to the list of of the square's units.\n      for (var ui in units) {\n        var cur_unit = units[ui];\n\n        if (cur_unit.indexOf(cur_square) !== -1) {\n          cur_square_units.push(cur_unit);\n        }\n      }\n\n      // Save the current square and its units to the map\n      square_unit_map[cur_square] = cur_square_units;\n    }\n\n    return square_unit_map;\n  };\n\n  sudoku._get_square_peers_map = function(squares, units_map) {\n    /* Return a map of `squares` and their associated peers, i.e., a set of\n        other squares in the square's unit.\n        */\n    var square_peers_map = {};\n\n    // For every square...\n    for (var si in squares) {\n      var cur_square = squares[si];\n      var cur_square_units = units_map[cur_square];\n\n      // Maintain list of the current square's peers\n      var cur_square_peers = [];\n\n      // Look through the current square's units map...\n      for (var sui in cur_square_units) {\n        var cur_unit = cur_square_units[sui];\n\n        for (var ui in cur_unit) {\n          var cur_unit_square = cur_unit[ui];\n\n          if (\n            cur_square_peers.indexOf(cur_unit_square) === -1 &&\n            cur_unit_square !== cur_square\n          ) {\n            cur_square_peers.push(cur_unit_square);\n          }\n        }\n      }\n\n      // Save the current square an its associated peers to the map\n      square_peers_map[cur_square] = cur_square_peers;\n    }\n\n    return square_peers_map;\n  };\n\n  sudoku._get_all_units = function(rows, cols) {\n    /* Return a list of all units (rows, cols, boxes)\n     */\n    var units = [];\n\n    // Rows\n    for (var ri in rows) {\n      units.push(sudoku._cross(rows[ri], cols));\n    }\n\n    // Columns\n    for (var ci in cols) {\n      units.push(sudoku._cross(rows, cols[ci]));\n    }\n\n    // Boxes\n    var row_squares = [\"ABC\", \"DEF\", \"GHI\"];\n    var col_squares = [\"123\", \"456\", \"789\"];\n    for (var rsi in row_squares) {\n      for (var csi in col_squares) {\n        units.push(sudoku._cross(row_squares[rsi], col_squares[csi]));\n      }\n    }\n\n    return units;\n  };\n\n  // Conversions\n  // -------------------------------------------------------------------------\n  sudoku.board_string_to_grid = function(board_string) {\n    /* Convert a board string to a two-dimensional array\n     */\n    var rows = [];\n    var cur_row = [];\n    for (var i in board_string) {\n      cur_row.push(board_string[i]);\n      if (i % 9 == 8) {\n        rows.push(cur_row);\n        cur_row = [];\n      }\n    }\n    return rows;\n  };\n\n  sudoku.board_grid_to_string = function(board_grid) {\n    /* Convert a board grid to a string\n     */\n    var board_string = \"\";\n    for (var r = 0; r < 9; ++r) {\n      for (var c = 0; c < 9; ++c) {\n        board_string += board_grid[r][c];\n      }\n    }\n    return board_string;\n  };\n\n  // Utility\n  // -------------------------------------------------------------------------\n\n  sudoku.print_board = function(board) {\n    /* Print a sudoku `board` to the console.\n     */\n\n    // Assure a valid board\n    var report = sudoku.validate_board(board);\n    if (report !== true) {\n      throw report;\n    }\n\n    var V_PADDING = \" \"; // Insert after each square\n    var H_PADDING = \"\\n\"; // Insert after each row\n\n    var V_BOX_PADDING = \"  \"; // Box vertical padding\n    var H_BOX_PADDING = \"\\n\"; // Box horizontal padding\n\n    var display_string = \"\";\n\n    for (var i in board) {\n      var square = board[i];\n\n      // Add the square and some padding\n      display_string += square + V_PADDING;\n\n      // Vertical edge of a box, insert v. box padding\n      if (i % 3 === 2) {\n        display_string += V_BOX_PADDING;\n      }\n\n      // End of a line, insert horiz. padding\n      if (i % 9 === 8) {\n        display_string += H_PADDING;\n      }\n\n      // Horizontal edge of a box, insert h. box padding\n      if (i % 27 === 26) {\n        display_string += H_BOX_PADDING;\n      }\n    }\n\n    console.log(display_string);\n  };\n\n  sudoku.validate_board = function(board) {\n    /* Return if the given `board` is valid or not. If it's valid, return\n        true. If it's not, return a string of the reason why it's not.\n        */\n\n    // Check for empty board\n    if (!board) {\n      return \"Empty board\";\n    }\n\n    // Invalid board length\n    if (board.length !== NR_SQUARES) {\n      return (\n        \"Invalid board size. Board must be exactly \" + NR_SQUARES + \" squares.\"\n      );\n    }\n\n    // Check for invalid characters\n    for (var i in board) {\n      if (\n        !sudoku._in(board[i], sudoku.DIGITS) &&\n        board[i] !== sudoku.BLANK_CHAR\n      ) {\n        return (\n          \"Invalid board character encountered at index \" + i + \": \" + board[i]\n        );\n      }\n    }\n\n    // Otherwise, we're good. Return true.\n    return true;\n  };\n\n  sudoku._cross = function(a, b) {\n    /* Cross product of all elements in `a` and `b`, e.g.,\n        sudoku._cross(\"abc\", \"123\") ->\n        [\"a1\", \"a2\", \"a3\", \"b1\", \"b2\", \"b3\", \"c1\", \"c2\", \"c3\"]\n        */\n    var result = [];\n    for (var ai in a) {\n      for (var bi in b) {\n        result.push(a[ai] + b[bi]);\n      }\n    }\n    return result;\n  };\n\n  sudoku._in = function(v, seq) {\n    /* Return if a value `v` is in sequence `seq`.\n     */\n    return seq.indexOf(v) !== -1;\n  };\n\n  sudoku._first_true = function(seq) {\n    /* Return the first element in `seq` that is true. If no element is\n        true, return false.\n        */\n    for (var i in seq) {\n      if (seq[i]) {\n        return seq[i];\n      }\n    }\n    return false;\n  };\n\n  sudoku._shuffle = function(seq) {\n    /* Return a shuffled version of `seq`\n     */\n\n    // Create an array of the same size as `seq` filled with false\n    var shuffled = [];\n    for (var i = 0; i < seq.length; ++i) {\n      shuffled.push(false);\n    }\n\n    for (var i in seq) {\n      var ti = sudoku._rand_range(seq.length);\n\n      while (shuffled[ti]) {\n        ti = ti + 1 > seq.length - 1 ? 0 : ti + 1;\n      }\n\n      shuffled[ti] = seq[i];\n    }\n\n    return shuffled;\n  };\n\n  sudoku._rand_range = function(max, min) {\n    /* Get a random integer in the range of `min` to `max` (non inclusive).\n        If `min` not defined, default to 0. If `max` not defined, throw an \n        error.\n        */\n    min = min || 0;\n    if (max) {\n      return Math.floor(Math.random() * (max - min)) + min;\n    } else {\n      throw \"Range undefined\";\n    }\n  };\n\n  sudoku._strip_dups = function(seq) {\n    /* Strip duplicate values from `seq`\n     */\n    var seq_set = [];\n    var dup_map = {};\n    for (var i in seq) {\n      var e = seq[i];\n      if (!dup_map[e]) {\n        seq_set.push(e);\n        dup_map[e] = true;\n      }\n    }\n    return seq_set;\n  };\n\n  sudoku._force_range = function(nr, max, min) {\n    /* Force `nr` to be within the range from `min` to, but not including, \n        `max`. `min` is optional, and will default to 0. If `nr` is undefined,\n        treat it as zero.\n        */\n    min = min || 0;\n    nr = nr || 0;\n    if (nr < min) {\n      return min;\n    }\n    if (nr > max) {\n      return max;\n    }\n    return nr;\n  };\n\n  // Initialize library after load\n  initialize();\n\n  // Pass whatever the root object is, lsike 'window' in browsers\n})();\n/* eslint-enable */\n\nimport { ref, onBeforeUnmount, onBeforeUpdate } from \"vue\";\n\nexport default {\n  setup() {\n    onBeforeUnmount(() => {\n      socket.close(1000, \"logging off\");\n    });\n\n    socket.onopen = function() {\n      console.log(\"connection established\");\n    };\n    const puzzle = ref({});\n    socket.onmessage = function({ data }) {\n      puzzle.value = JSON.parse(data).puzzle;\n      // console.log(toRaw(puzzle.value));\n      // console.table(toRaw(puzzle.value));\n    };\n\n    // For reference: https://composition-api.vuejs.org/api.html#template-refs\n\n    // For refs\n    const inputs = ref([]);\n    inputs.value.push([]);\n    inputs.value.push([]);\n    inputs.value.push([]);\n    inputs.value.push([]);\n    inputs.value.push([]);\n    inputs.value.push([]);\n    inputs.value.push([]);\n    inputs.value.push([]);\n    inputs.value.push([]);\n\n    // make sure to reset the refs before each update\n    onBeforeUpdate(() => {\n      // console.log(toRaw(inputs.value));\n      inputs.value = [];\n      inputs.value.push([]);\n      inputs.value.push([]);\n      inputs.value.push([]);\n      inputs.value.push([]);\n      inputs.value.push([]);\n      inputs.value.push([]);\n      inputs.value.push([]);\n      inputs.value.push([]);\n      inputs.value.push([]);\n    });\n\n    const recursiveMove = (row, col, rowDir, colDir, dir, count) => {\n      try {\n        // console.log(row);\n        // console.log(col);\n        // console.log(rowDir), console.log(colDir), console.log(dir);\n        if (!inputs.value[row + rowDir][col + colDir].disabled) {\n          inputs.value[row + rowDir][col + colDir].focus();\n        } else {\n          if (dir == \"row\") {\n            // console.log(\"rowDir\");\n            // console.log(rowDir);\n            if (colDir > 0) {\n              colDir++;\n            } else if (colDir < 0) {\n              colDir--;\n            }\n          } else if (dir == \"col\") {\n            if (rowDir > 0) {\n              rowDir++;\n            } else if (rowDir < 0) {\n              rowDir--;\n            }\n          }\n          count++;\n          if (count > 4) {\n            return 0;\n          }\n          recursiveMove(row, col, rowDir, colDir, dir, count);\n        }\n      } catch {\n        // console.log(err);\n        // console.log(row);\n        // console.log(col);\n        // console.log(rowDir), console.log(colDir), console.log(dir);\n        // console.log(toRaw(inputs.value));\n      }\n    };\n\n    const handleInput = ({ cell, row, col, key, $event }) => {\n      const acceptedKeys = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\n      const arrowKeys = [\"ArrowDown\", \"ArrowRight\", \"ArrowLeft\", \"ArrowUp\"];\n\n      // Only allow change of non-givens\n      if (!cell.given && acceptedKeys.includes(key)) {\n        $event.preventDefault();\n        // Update puzzle\n        // console.log(puzzle.value[row][col]);\n        // console.log(value);\n        puzzle.value[row][col].number = key;\n        // console.log(puzzle.value[row][col]);\n        // Send to socket server\n        // console.log(\"sending\");\n        // console.log(toRaw(puzzle.value));\n        socket.send(JSON.stringify({ puzzle: puzzle.value }));\n      } else if (key == \"Backspace\") {\n        $event.preventDefault();\n        puzzle.value[row][col].number = \"\";\n        // console.log(\"sending\");\n        // console.log(toRaw(puzzle.value));\n        socket.send(JSON.stringify({ puzzle: puzzle.value }));\n      } else if (arrowKeys.includes(key)) {\n        switch (key) {\n          case \"ArrowRight\":\n            recursiveMove(row, col, 0, 1, \"row\");\n            break;\n          case \"ArrowLeft\":\n            recursiveMove(row, col, 0, -1, \"row\");\n            break;\n          case \"ArrowDown\":\n            recursiveMove(row, col, 1, 0, \"col\");\n\n            break;\n          case \"ArrowUp\":\n            recursiveMove(row, col, -1, 0, \"col\");\n\n            break;\n        }\n      } else if (key != \"Tab\") {\n        $event.preventDefault();\n        console.log(key);\n        console.log(key != \"Meta\");\n      }\n    };\n\n    return {\n      puzzle,\n      handleInput,\n      inputs\n    };\n  }\n};\n</script>\n\n<style lang=\"scss\">\nbody {\n  font-family: Consolea, \"Courier New\", Courier, monospace;\n}\n#app {\n  // font-family: 'Courier New', Courier, monospace;\n  // -webkit-font-smoothing: antialiased;\n  // -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  display: flex;\n  height: 100vh;\n  width: 100vw;\n  margin: 0;\n  padding: 0;\n  background-color: #2e3440;\n}\n\n$border: 2px solid black;\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n  margin: auto;\n}\n\ntd {\n  padding: 0;\n  margin: 0;\n  line-height: 20px;\n  input {\n    margin: 0;\n    padding: 0;\n    font-size: 40px;\n    width: 63px;\n    height: 63px;\n    border: 1px solid #ccc;\n    text-align: center;\n    color: grey;\n    font-style: italic;\n    font-family: Consolea, \"Courier New\", Courier, monospace;\n\n    &:focus {\n      outline: none;\n      background-color: lightblue;\n    }\n\n    &:disabled {\n      background-color: white;\n    }\n  }\n}\n\n.border-right {\n  border-right: $border;\n}\n.border-left {\n  border-left: $border;\n}\n\n.border-bottom {\n  border-bottom: $border;\n}\n\n.border-top {\n  border-top: $border;\n}\n\n.bold {\n  font-style: normal;\n  color: black;\n  font-weight: 600;\n}\n\n.invalid {\n  color: red;\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=57c4477b\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&lang=scss\"\nscript.render = render\n\nexport default script","import { createApp } from 'vue';\nimport App from './App.vue'\n// import router from './router'\n\ncreateApp(App).mount('#app')\n","export { default } from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&lang=scss\"; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-cli-plugin-vue-next/node_modules/vue-loader/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&lang=scss\""],"sourceRoot":""}